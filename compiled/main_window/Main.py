# Form implementation generated from reading ui file 'C:\Users\cruiz\OneDrive\Documents\Github\HakotX-UI\ui\main_window\Main.ui'
#
# Created by: PyQt6 UI code generator 6.9.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1200, 800)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tabWidget = QtWidgets.QTabWidget(parent=self.centralwidget)
        self.tabWidget.setObjectName("tabWidget")
        self.tabDatabase = QtWidgets.QWidget()
        self.tabDatabase.setObjectName("tabDatabase")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.tabDatabase)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.groupBoxSearch = QtWidgets.QGroupBox(parent=self.tabDatabase)
        self.groupBoxSearch.setObjectName("groupBoxSearch")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.groupBoxSearch)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.searchInput = QtWidgets.QLineEdit(parent=self.groupBoxSearch)
        self.searchInput.setObjectName("searchInput")
        self.horizontalLayout.addWidget(self.searchInput)
        self.searchButton = QtWidgets.QPushButton(parent=self.groupBoxSearch)
        self.searchButton.setObjectName("searchButton")
        self.horizontalLayout.addWidget(self.searchButton)
        self.verticalLayout_2.addWidget(self.groupBoxSearch)
        self.databaseTable = QtWidgets.QTableWidget(parent=self.tabDatabase)
        self.databaseTable.setMinimumSize(QtCore.QSize(1158, 0))
        self.databaseTable.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger.NoEditTriggers)
        self.databaseTable.setObjectName("databaseTable")
        self.databaseTable.setColumnCount(8)
        self.databaseTable.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.databaseTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.databaseTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.databaseTable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.databaseTable.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.databaseTable.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.databaseTable.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.databaseTable.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.databaseTable.setHorizontalHeaderItem(7, item)
        self.databaseTable.horizontalHeader().setCascadingSectionResizes(True)
        self.databaseTable.horizontalHeader().setDefaultSectionSize(130)
        self.databaseTable.horizontalHeader().setSortIndicatorShown(True)
        self.databaseTable.horizontalHeader().setStretchLastSection(True)
        self.databaseTable.verticalHeader().setVisible(False)
        self.databaseTable.verticalHeader().setCascadingSectionResizes(False)
        self.databaseTable.verticalHeader().setHighlightSections(False)
        self.databaseTable.verticalHeader().setSortIndicatorShown(False)
        self.databaseTable.verticalHeader().setStretchLastSection(False)
        self.verticalLayout_2.addWidget(self.databaseTable)
        self.tabWidget.addTab(self.tabDatabase, "")
        self.tabScanner = QtWidgets.QWidget()
        self.tabScanner.setObjectName("tabScanner")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.tabScanner)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.groupBoxScanner = QtWidgets.QGroupBox(parent=self.tabScanner)
        self.groupBoxScanner.setObjectName("groupBoxScanner")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.groupBoxScanner)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.labelStartIP = QtWidgets.QLabel(parent=self.groupBoxScanner)
        self.labelStartIP.setObjectName("labelStartIP")
        self.horizontalLayout_2.addWidget(self.labelStartIP)
        self.startIP = QtWidgets.QLineEdit(parent=self.groupBoxScanner)
        self.startIP.setObjectName("startIP")
        self.horizontalLayout_2.addWidget(self.startIP)
        self.scanButton = QtWidgets.QPushButton(parent=self.groupBoxScanner)
        self.scanButton.setObjectName("scanButton")
        self.horizontalLayout_2.addWidget(self.scanButton)
        self.verticalLayout_3.addWidget(self.groupBoxScanner)
        self.scanLog = QtWidgets.QTextEdit(parent=self.tabScanner)
        self.scanLog.setReadOnly(True)
        self.scanLog.setObjectName("scanLog")
        self.verticalLayout_3.addWidget(self.scanLog)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.stopScanButton = QtWidgets.QPushButton(parent=self.tabScanner)
        self.stopScanButton.setEnabled(False)
        self.stopScanButton.setObjectName("stopScanButton")
        self.horizontalLayout_3.addWidget(self.stopScanButton)
        self.saveScanButton = QtWidgets.QPushButton(parent=self.tabScanner)
        self.saveScanButton.setObjectName("saveScanButton")
        self.horizontalLayout_3.addWidget(self.saveScanButton)
        self.clearScanButton = QtWidgets.QPushButton(parent=self.tabScanner)
        self.clearScanButton.setObjectName("clearScanButton")
        self.horizontalLayout_3.addWidget(self.clearScanButton)
        self.verticalLayout_3.addLayout(self.horizontalLayout_3)
        self.tabWidget.addTab(self.tabScanner, "")
        self.tabBrowser = QtWidgets.QWidget()
        self.tabBrowser.setObjectName("tabBrowser")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tabBrowser)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.groupBoxBrowser = QtWidgets.QGroupBox(parent=self.tabBrowser)
        self.groupBoxBrowser.setMaximumSize(QtCore.QSize(16777215, 60))
        self.groupBoxBrowser.setObjectName("groupBoxBrowser")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.groupBoxBrowser)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.backButton = QtWidgets.QPushButton(parent=self.groupBoxBrowser)
        self.backButton.setMaximumSize(QtCore.QSize(40, 30))
        self.backButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/bonus/icons-shadowless-32/arrow-180.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.backButton.setIcon(icon)
        self.backButton.setObjectName("backButton")
        self.horizontalLayout_4.addWidget(self.backButton)
        self.forwardButton = QtWidgets.QPushButton(parent=self.groupBoxBrowser)
        self.forwardButton.setMaximumSize(QtCore.QSize(40, 30))
        self.forwardButton.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/bonus/icons-shadowless-32/arrow.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.forwardButton.setIcon(icon1)
        self.forwardButton.setObjectName("forwardButton")
        self.horizontalLayout_4.addWidget(self.forwardButton)
        self.refreshButton = QtWidgets.QPushButton(parent=self.groupBoxBrowser)
        self.refreshButton.setMaximumSize(QtCore.QSize(40, 30))
        self.refreshButton.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/bonus/icons-shadowless-24/arrow-circle-315.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.refreshButton.setIcon(icon2)
        self.refreshButton.setObjectName("refreshButton")
        self.horizontalLayout_4.addWidget(self.refreshButton)
        self.urlBar = QtWidgets.QLineEdit(parent=self.groupBoxBrowser)
        self.urlBar.setObjectName("urlBar")
        self.horizontalLayout_4.addWidget(self.urlBar)
        self.goButton = QtWidgets.QPushButton(parent=self.groupBoxBrowser)
        self.goButton.setMaximumSize(QtCore.QSize(60, 30))
        self.goButton.setObjectName("goButton")
        self.horizontalLayout_4.addWidget(self.goButton)
        self.verticalLayout_4.addWidget(self.groupBoxBrowser)
        self.webView = QtWebEngineWidgets.QWebEngineView(parent=self.tabBrowser)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.webView.sizePolicy().hasHeightForWidth())
        self.webView.setSizePolicy(sizePolicy)
        self.webView.setProperty("url", QtCore.QUrl("https://www.github.com/AlienWolfX"))
        self.webView.setObjectName("webView")
        self.verticalLayout_4.addWidget(self.webView)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.homeButton = QtWidgets.QPushButton(parent=self.tabBrowser)
        self.homeButton.setMaximumSize(QtCore.QSize(40, 30))
        self.homeButton.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/icons-shadowless/home.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.homeButton.setIcon(icon3)
        self.homeButton.setObjectName("homeButton")
        self.horizontalLayout_5.addWidget(self.homeButton)
        self.statusLabel = QtWidgets.QLabel(parent=self.tabBrowser)
        self.statusLabel.setObjectName("statusLabel")
        self.horizontalLayout_5.addWidget(self.statusLabel)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem2)
        self.zoomInButton = QtWidgets.QPushButton(parent=self.tabBrowser)
        self.zoomInButton.setMaximumSize(QtCore.QSize(40, 30))
        self.zoomInButton.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/bonus/icons-shadowless-32/plus.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.zoomInButton.setIcon(icon4)
        self.zoomInButton.setObjectName("zoomInButton")
        self.horizontalLayout_5.addWidget(self.zoomInButton)
        self.zoomOutButton = QtWidgets.QPushButton(parent=self.tabBrowser)
        self.zoomOutButton.setMaximumSize(QtCore.QSize(40, 30))
        self.zoomOutButton.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/bonus/icons-shadowless-32/minus.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.zoomOutButton.setIcon(icon5)
        self.zoomOutButton.setObjectName("zoomOutButton")
        self.horizontalLayout_5.addWidget(self.zoomOutButton)
        self.verticalLayout_4.addLayout(self.horizontalLayout_5)
        self.tabWidget.addTab(self.tabBrowser, "")
        self.verticalLayout.addWidget(self.tabWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1200, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(parent=self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(parent=self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuView = QtWidgets.QMenu(parent=self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuHelp = QtWidgets.QMenu(parent=self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.toolBar = QtWidgets.QToolBar(parent=MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.ToolBarArea.TopToolBarArea, self.toolBar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setSizeGripEnabled(False)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionExit = QtGui.QAction(parent=MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionAbout = QtGui.QAction(parent=MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/bonus/icons-shadowless-32/question.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionAbout.setIcon(icon6)
        self.actionAbout.setObjectName("actionAbout")
        self.actionScan = QtGui.QAction(parent=MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/bonus/icons-shadowless-24/magnifier-left.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionScan.setIcon(icon7)
        self.actionScan.setStatusTip("")
        self.actionScan.setObjectName("actionScan")
        self.actionSave = QtGui.QAction(parent=MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/icons/folder-stamp.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionSave.setIcon(icon8)
        self.actionSave.setObjectName("actionSave")
        self.actionEditRecord = QtGui.QAction(parent=MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/icons-shadowless/database--pencil.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionEditRecord.setIcon(icon9)
        self.actionEditRecord.setObjectName("actionEditRecord")
        self.actionDeleteRecord = QtGui.QAction(parent=MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/icons-shadowless/database-delete.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionDeleteRecord.setIcon(icon10)
        self.actionDeleteRecord.setObjectName("actionDeleteRecord")
        self.actionRefresh = QtGui.QAction(parent=MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/bonus/icons-24/arrow-circle-double-135.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionRefresh.setIcon(icon11)
        self.actionRefresh.setObjectName("actionRefresh")
        self.actionHome = QtGui.QAction(parent=MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/bonus/icons-shadowless-24/home.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionHome.setIcon(icon12)
        self.actionHome.setObjectName("actionHome")
        self.actionAdd_to_DB = QtGui.QAction(parent=MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/bonus/icons-24/database-import.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionAdd_to_DB.setIcon(icon13)
        self.actionAdd_to_DB.setObjectName("actionAdd_to_DB")
        self.actionDelete_All_Records = QtGui.QAction(parent=MainWindow)
        self.actionDelete_All_Records.setCheckable(False)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("C:\\Users\\cruiz\\OneDrive\\Documents\\Github\\HakotX-UI\\ui\\main_window\\../../../../Fugue Icons Pack/icons-shadowless/database--exclamation.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionDelete_All_Records.setIcon(icon14)
        self.actionDelete_All_Records.setObjectName("actionDelete_All_Records")
        self.actionDelete_All_Record = QtGui.QAction(parent=MainWindow)
        self.actionDelete_All_Record.setIcon(icon14)
        self.actionDelete_All_Record.setObjectName("actionDelete_All_Record")
        self.menuFile.addAction(self.actionScan)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionAdd_to_DB)
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionEditRecord)
        self.menuEdit.addAction(self.actionDeleteRecord)
        self.menuEdit.addAction(self.actionDelete_All_Record)
        self.menuView.addAction(self.actionRefresh)
        self.menuView.addAction(self.actionHome)
        self.menuHelp.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionScan)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionEditRecord)
        self.toolBar.addAction(self.actionDeleteRecord)
        self.toolBar.addAction(self.actionDelete_All_Record)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionRefresh)
        self.toolBar.addAction(self.actionHome)
        self.toolBar.addSeparator()

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        self.refreshButton.clicked.connect(self.actionRefresh.trigger) # type: ignore
        self.homeButton.clicked.connect(self.actionHome.trigger) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "HakotX - ONU Scanner & Viewer"))
        self.groupBoxSearch.setTitle(_translate("MainWindow", "Search & Filter"))
        self.searchInput.setPlaceholderText(_translate("MainWindow", "Search by IP, MAC or SSID..."))
        self.searchButton.setText(_translate("MainWindow", "Search"))
        self.databaseTable.setSortingEnabled(True)
        item = self.databaseTable.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "IP"))
        item = self.databaseTable.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "MAC"))
        item = self.databaseTable.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "SSID (2.4GHz)"))
        item = self.databaseTable.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "SSID (5GHz)"))
        item = self.databaseTable.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Password (2.4GHz)"))
        item = self.databaseTable.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Password (5GHz)"))
        item = self.databaseTable.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Source"))
        item = self.databaseTable.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "Last Updated"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabDatabase), _translate("MainWindow", "Database"))
        self.groupBoxScanner.setTitle(_translate("MainWindow", "Scanner Configuration"))
        self.labelStartIP.setText(_translate("MainWindow", "ONU IP Address"))
        self.startIP.setPlaceholderText(_translate("MainWindow", "192.168.1.1"))
        self.scanButton.setText(_translate("MainWindow", "Start Scan"))
        self.stopScanButton.setText(_translate("MainWindow", "Stop Scan"))
        self.saveScanButton.setText(_translate("MainWindow", "Save Results"))
        self.clearScanButton.setText(_translate("MainWindow", "Clear Log"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabScanner), _translate("MainWindow", "IP Scanner"))
        self.groupBoxBrowser.setTitle(_translate("MainWindow", "Navigation"))
        self.urlBar.setPlaceholderText(_translate("MainWindow", "Enter URL or search terms..."))
        self.goButton.setText(_translate("MainWindow", "Go"))
        self.statusLabel.setText(_translate("MainWindow", "Ready"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabBrowser), _translate("MainWindow", "Web Browser"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "Main Toolbar"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionScan.setText(_translate("MainWindow", "Scan Network"))
        self.actionScan.setToolTip(_translate("MainWindow", "Scan for available ONU devices"))
        self.actionScan.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave.setText(_translate("MainWindow", "Save Changes"))
        self.actionSave.setToolTip(_translate("MainWindow", "Save all changes"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionEditRecord.setText(_translate("MainWindow", "Edit Record"))
        self.actionEditRecord.setToolTip(_translate("MainWindow", "Edit selected record"))
        self.actionEditRecord.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionDeleteRecord.setText(_translate("MainWindow", "Delete Record"))
        self.actionDeleteRecord.setToolTip(_translate("MainWindow", "Delete selected record"))
        self.actionDeleteRecord.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.actionRefresh.setText(_translate("MainWindow", "Refresh"))
        self.actionRefresh.setToolTip(_translate("MainWindow", "Refresh current page"))
        self.actionRefresh.setShortcut(_translate("MainWindow", "F5"))
        self.actionHome.setText(_translate("MainWindow", "Home"))
        self.actionHome.setToolTip(_translate("MainWindow", "Go to home page"))
        self.actionHome.setShortcut(_translate("MainWindow", "Alt+Home"))
        self.actionAdd_to_DB.setText(_translate("MainWindow", "Import CSV to DB"))
        self.actionDelete_All_Records.setText(_translate("MainWindow", "Delete All Records"))
        self.actionDelete_All_Record.setText(_translate("MainWindow", "Delete All Record"))
from PyQt6 import QtWebEngineWidgets
